package fetch

import (
	"bytes"
	"encoding/json"
	"github.com/gofiber/fiber/v2"
)

func Post(uri string, bodyJson fiber.Map) []byte {

	a := fiber.AcquireAgent()
	res := fiber.AcquireResponse()

	defer func() {
		fiber.ReleaseAgent(a)
		fiber.ReleaseResponse(res)
	}()

	a.Reuse()
	// a.Timeout(10 * time.Second)

	req := a.Request()
	req.Header.SetMethod(fiber.MethodPost)
	req.Header.SetContentType(fiber.MIMEApplicationJSON)
	req.SetRequestURI(uri)

	var buffer bytes.Buffer
	encoder := json.NewEncoder(&buffer)
	encoder.SetEscapeHTML(false)
	encoder.Encode(&bodyJson)

	req.SetBodyString(buffer.String())

	if err := a.Parse(); err != nil {
		return nil
	}

	_, bodyRes, _ := a.SetResponse(res).Bytes()

	return bodyRes

}

func Get(uri string) []byte {

	a := fiber.AcquireAgent()
	res := fiber.AcquireResponse()

	defer func() {
		fiber.ReleaseAgent(a)
		fiber.ReleaseResponse(res)
	}()

	a.Reuse()
	// a.Timeout(10 * time.Second)

	req := a.Request()
	req.Header.SetMethod(fiber.MethodGet)
	req.SetRequestURI(uri)

	if err := a.Parse(); err != nil {
		return nil
	}

	_, bodyRes, _ := a.SetResponse(res).Bytes()

	return bodyRes

}
